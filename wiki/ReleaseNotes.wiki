#labels Featured
=== 0.32 ===
Pacman :
 * 927 : Ajout d'une propriété pour indiquer si le nom de la balise user code pour les méthodes de service contient le type des paramètres ou uniquement le nom de l'opération : deprecated.soa.usercode.params
 * 1980 : Générateur Cinematic Swing
 * 2520 : Suppression de warnings dans le code généré dans l'énumération d'exigences
 * 2553 : ModelFinder : Recherche d'éléments dans le modèle
 * 2986 : Générateur de scripts Java de remplissage de base de données
 * 3028 : Suppression de warnings dans le code généré dans les énumérations d'attributs
 * 3064 : Ajout icone Safr@n dans About Eclipse
 * 3166 : Couverture de code des méthodes get[G/S]etterMethod() dans les classes xxxAttributes_Enum
 * 3170 : Gestion métadonnée AcceptUnauthentified sur les opérations de service
 * 3171 : Migration des générateurs pour Studio 1.3.0
 * 3178 : Ordre des énumérés dans AttributesEnum
 
Spi4J :
 * 2863 : Possibilité de surcharger l'initialisation d'un présenteur (méthode initPresenter)
 * 2994 : Faciliter la remise à null des SpiRadioButton
 * 3083 : Ajout de la classe DaoUtils pour effectuer des count en base
 
Divers : 
 * 1377 : Changement d'auteur dans la Javadoc
=== 0.31 ===
 * Mise à jour des guides d'architecture et des guides utilisateurs Spi4J et Pacman
 * Pacman : Nouveau générateur pour la validation de modèle
 * Pacman : Nouveau générateur pour le démarrage d'un nouveau projet
 * Pacman : Paramétrisation (current ou none) du RequirementVersionTest pour le versionning d'exigence
 * Pacman : Centralisation d'erreurs de génération dans la vue Error Log d'Eclipse
 * Pacman : Ajout de User Code sur le test d'un DTO non persistant (car l'id peut être dynamique)
 * Spi4J : Suppression du type de l'exigence dans l'énumération des exigences
 * Spi4J : Optimisation des SpiTable (entre autres) avec gestion de cache sur les java.lang.Method au niveau des énumérations d'attributs
 * Spi4J : Ajout d'un outil de vérification de cohérence de la structure en base de données (et accès dans la servlet d'administration)

=== 0.30 ===
 * Spi4J : Mémoriser l’historique de navigation de manière centralisée : Affichage de la liste des présenteurs ouverts lors de l'interception d'une erreur non catchée
 * Spi4J : Prendre en compte le « setId() » sur une Entity afin de « court-circuiter » la séquence (en mode « peuplage BdD » par exemple) : Activation : ParamPersistence_Abs.enableInsertWithId(true)
 * Spi4J : Détection de perte de focus après édition d'une cellule d'un SpiTable
 * Spi4J : Désactiver les popup des SpiTable
 * Pacman : Problème de génération du test de DTO si attribut avec cardinalité multiple
 * Pacman : Remplacer les Alias de ParamPersistenceGen_Abs
 * Pacman : [GWT] : Ajouter une classe dans le SpiPanel pour référencer la mise en forme depuis une CSS
 * Pacman : Cinematic : Permettre de façon générale un typage plus primitif (Integer, String, …)

=== 0.29 ===
 * Spi4J : Dans les logs de debuggage, afficher le nombre de requêtes SQL pour chaque appel service
 * Spi4J : Sql de debug incorrect avec un paramètre sql de type date
 * Spi4J : Remoting autre que Java
 * Spi4J : Erreur lors de l'appel à setList sur le SpiSelectorTable
 * Spi4J : Simplification UserBusiness
  * Renommage de initServerBindings et initClientBindings en une seule méthode : initBindings()
  * La méthode setProxyFactory initialise automatiquement les bindings
  * Utilisation d'une seule méthode pour initialiser la factory des proxies : setProxyFactory()
 * Spi4J : Ajout méthode getCompletePhysicalName dans les Columns_Enum
 * Spi4J : Compilation GWT sans les sources
Pour utiliser, rajouter
{{{
<classifier>gwt</classifier>
}}}
au niveau des dépendances :
{{{
<dependency>
    <groupId>fr.spi4j</groupId>
    <artifactId>spi4j-gwt</artifactId>
    <version>0.29</version>
    <classifier>gwt</classifier>
</dependency>
}}}
 * Spi4J : Démarrage d'un client GWT et initialisation de la base de données
 * Pacman : Gérer l'annotation Computed sur les relations
 * Pacman : User code dans les getId et setId sur DTO non persistants
 * Pacman : Optimiser la génération

=== 0.28 ===

  * Spi4J : Correction de DaoJdbc_Abs.findByCriteria : La map passée en paramètre peut être nulle
  * Spi4J : Correction d'un problème d'accent avec SSO
  * Pacman : Génération GWT sans les sources de Pacman
  * Pacman : Nommage Xto dans Cinematic
  * Pacman : Relations inverses dans AttributesEnum

=== 0.27 ===

  * Pacman : Gestion du versionning des exigences
  * Pacman : Correction de la génération de la méthode testValidate
  * Spi4J : Renommage de getters et setters pour enlever {{{'_'}}}
  * Spi4J : Correction trop de requêtes exécutées par les Mappers de web-services
  * Spi4J : Correction TableCriteria avec critères de recherche quasi identiques (ex: libellé et libelléAbrégé)
  * Spi4J : Correction findByColumn avec une valeur nulle
  * Spi4J : Ajout gestion de batchs simples (mono-JVM)
  * Spi4J : Ajout classe Spi4jBuildInfo pour obtenir la version de Spi4J utilisée

=== 0.25 ===

  * Pacman : Validation de la taille d'attributs non obligatoires
  * Spi4J : Contrôle surfacique des champs d'un écran Swing

=== 0.24 ===

  * Pacman : Découper la méthode de test d'un DTO   
  * Pacman : Revoir l'énumération des exigences (énumération ne compile pas si trop d'exigences)
  * Pacman : Problème de génération avec changement de paramétrage   
  * Spi4J : Amélioration Spi4J UI suite à retour d'expérience
  * Spi4J : Pouvoir récupérer une liste d'entités à partir d'un cursor   
  * Spi4J : Faire un tearDown même quand la story est en échec pendant les tests de charge    

=== 0.23 ===

  * Correction dans la prise en compte de certains paramètres de génération de code
  * Possibilité de découper l'énumération générée des exigences
  * Découpage des méthodes générées de test des DTO
  * Migration des fichiers pom.xml de Spi4J en Maven 3
  * Ajout d'un archetype Maven dans les librairies packagés pour générer la structure et la configuration de projets basés sur Spi4J et Pacman. Après installation de spi4j-archetype dans le repository Maven local, il suffit d'exécuter la commande suivante pour générer les modules d'un projet, en répondant à quelques questions (par exemple : groupId=fr.test, artifactId=test, version=1.0-SNAPSHOT, package=fr.test, spi4jVersion=0.23) : {{{mvn archetype:generate -DarchetypeGroupId=fr.spi4j -DarchetypeArtifactId=spi4j-archetype -DarchetypeVersion=0.23}}}

=== 0.22 ===

  * Correction warnings sur code généré
  * Selon paramètre, ajout TableSpace pour les indexes dans les scripts pour Oracle
  * Possibilité de choisir un nom, autre que celui par défaut, de la clé primaire en base de données
  * Remonter une erreur typée lorsqu'une donnée n'existe plus en base de données
  * Améliorations SpiTreeComponent
  * Automatisation en intégration continue des tests de performance avec Apache JMeter exécutant les user stories JBehave dans l'application blanche
  * Nouveau module optionnel Spi4j-Report pour des éditions PDF en utilisant BIRT

=== 0.21 ===

  * Pacman v0.21 nécessite *Safr@n Studio v1+* (avec les nouvelles version d'Acceleo et du Designer)
  * Gestion de DtoFromEntity lors de la génération de code
  * Nommages paramétrables dans la génération de code
  * Améliorations de la génération de code pour les DTOs non persistants
  * Améliorations de la génération des scripts SQL sur les nommages spécifiques des index et des contraintes

=== 0.19 ===

  * Amélioration de la gestion des cookies http multiples dans le remoting
  * Corrections dans les composants Spi4J-Swing
  * La version de Pacman est inchangée et reste en 0.17.1

=== 0.18 ===

  * Corrections et évolutions mineures dans Spi4J
  * La version de Pacman est inchangée et reste en 0.17.1

=== 0.17 ===

  * Possibilité d'utiliser Ehcache comme implémentation de cache
  * Correction génération sur noms trop longs des séquences
  * Correction génération sur l'énumération des exigences
  * Correction génération sur DTO non persisté dans certains cas
  * Mise à jour du guide d'architecture (dépendances).
  * Correction de la configuration Apache dans la documentation d'installation de l'application blanche.
  * IHM en GWT dans l'application blanche. Une [http://demo.javamelody.cloudbees.net/ démo publique] est disponible.

=== 0.16 ===

  * Clarifications et compléments dans le guide d'architecture Spi4J
  * Corrections de bugs

=== 0.15 ===

  * Génération de services EJB3 Session Stateless et intercepteurs EJB3 (déclarés dans ejb-jar.xml)
  * Début d'exemple d'IHM en GWT dans l'application blanche
  * Configuration Apache dans la procédure d'installation de l'application blanche
  * Compléments dans le guide d'architecture Spi4J

=== 0.14 ===

  * Première version publique
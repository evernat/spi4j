<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.spi4j</groupId>
	<artifactId>spi4j-doc-report</artifactId>
	<packaging>jar</packaging>
	<version>4.5.0-SNAPSHOT</version>
	<name>spi4j Doc Report</name>
	<description>Spi4j Doc Report : Simple Programming Interface for XDocReport (API Mutualisée)</description>
	<licenses>
		<license>
			<name>ASL</name>
			<url>LICENSE</url>
		</license>
	</licenses>
	<organization>
		<name>MINARM / Safr@n</name>
	</organization>

	<dependencies>
		<!-- * Document Dependency * -->

		<!-- If you wish use OpenOffice odt : -->
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.document.odt</artifactId>
			<version>2.0.4</version>
		</dependency>

		<!-- If you wish use MS Word docx : -->
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.document.docx</artifactId>
			<version>2.0.4</version>
		</dependency>

		<!-- If you wish use MS PowerPoint pptx : -->
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.document.pptx</artifactId>
			<version>2.0.4</version>
		</dependency>


		<!-- * Template Dependency * -->

		<!-- If you wish use Freemarker : -->
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.template.freemarker</artifactId>
			<version>2.0.4</version>
		</dependency>

		<!-- If you wish use Velocity : -->
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.template.velocity</artifactId>
			<version>2.0.4</version>
			<optional>true</optional> <!-- optional pour ne pas être transitive -->
		</dependency>

		<!-- * Converter Dependency * -->

		<!-- If you wish convert docx 2 PDF/XHTML : -->
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.converter.docx.xwpf</artifactId>
			<version>2.0.4</version>
			<optional>true</optional> <!-- optional pour ne pas être transitive -->
		</dependency>

		<!-- If you wish convert odt 2 PDF/XHTML : -->
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.xdocreport.converter.odt.odfdom</artifactId>
			<version>2.0.4</version>
			<optional>true</optional> <!-- optional pour ne pas être transitive -->
		</dependency>

		<!-- * Tools Dependency * -->

		<!-- Tools gives you the capability to generate report with Java main command. 
			It is used by xdrtools.bat and xdrtools.sh for the preview feature in the 
			XDocReport MS Word macro and XDocReport OOo extension macro. -->
		<!-- <dependency> <groupId>fr.opensagres.xdocreport</groupId> <artifactId>fr.opensagres.xdocreport.document.tools</artifactId> 
			<version>1.0.4</version> </dependency> -->

		<!-- * REST/SOAP Remoting Resources Dependency * -->

		<!-- API : -->
		<!-- <dependency> <groupId>fr.opensagres.xdocreport</groupId> <artifactId>fr.opensagres.xdocreport.remoting.resources</artifactId> 
			<version>1.0.4</version> </dependency> -->

		<!-- JAX-RS/JAX-WS Client : -->
		<!-- <dependency> <groupId>fr.opensagres.xdocreport</groupId> <artifactId>fr.opensagres.xdocreport.remoting.resources.services.client</artifactId> 
			<version>1.0.4</version> </dependency> -->

		<!-- JAX-RS/JAX-WS Server: -->
		<!-- <dependency> <groupId>fr.opensagres.xdocreport</groupId> <artifactId>fr.opensagres.xdocreport.remoting.resources.services.server</artifactId> 
			<version>1.0.4</version> </dependency> -->


		<!-- JFreeChart pour générer des images de courbes qui peuvent ensuite 
			être incluses dans les documents -->
		<!-- <dependency> <groupId>org.jfree</groupId> <artifactId>jfreechart</artifactId> 
			<version>1.0.17</version> </dependency> -->


		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.20.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.20.0</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
			<!--<optional>true</optional> -->
		</dependency>
		<!-- Voir si encore utile avec jacoco. -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.12.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<!-- inclusion du fichier de licence dans le jar -->
			<resource>
				<directory>${project.basedir}</directory>
				<includes>
					<include>LICENSE*</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<release>11</release>
					<compilerArgument>-Xlint</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<!-- On attache les sources lors du packaging, pour que les sources 
							de spi4j-doc-report soient disponibles en cas de compilation GWT -->
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Execution des tests unitaires -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- Attention bug sur la version 3.0.0-M6 -->
				<version>3.0.0-M5</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<argLine>-Xmx128m</argLine>
				</configuration>
			</plugin>

			<!-- Verification des prerequis -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banDuplicatePomDependencyVersions />
								<requireMavenVersion>
									<version>3.6.3</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>11</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Couverture de code des tests unitaires -->
			<!-- JaCoco remplace cobertura-maven-plugin pour la version 11 de Java -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Javadoc -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<!-- Javadoc -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
			</plugin>
			<!-- Rapport des tests unitaires -->
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18</version>
				<configuration>
					<linkXRef>false</linkXRef>
				</configuration>
				<!-- http://jira.codehaus.org/browse/SUREFIRE-257 -->
				<reportSets>
					<reportSet>
						<reports>
							<report>report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- Rapport checkstyle -->
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<enableRSS>false</enableRSS>
					<linkXRef>false</linkXRef>
					<configLocation>${basedir}/conf/Checks_Spi4j.xml</configLocation>
				</configuration>
			</plugin>
			<!-- Rapport findbugs -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<omitVisitors>FindReturnRef,FindNullDeref,CloneIdiom,FindSqlInjection</omitVisitors>
				</configuration>
			</plugin>
			<!-- Rapport pmd -->
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<enableRulesSummary>false</enableRulesSummary>
					<source>11</source>
					<targetJdk>11</targetJdk>
					<linkXRef>false</linkXRef>
					<minimumPriority>4</minimumPriority>
					<minimumTokens>100</minimumTokens>
					<rulesets>
						<ruleset>${basedir}/conf/PMD_Spi4j.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>

			<!-- Information sur le projet -->
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>summary</report>
							<report>license</report>
							<report>mailing-list</report>
							<report>issue-tracking</report>
							<report>scm</report>
							<report>cim</report>
							<report>plugin-management</report>
							<report>plugins</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- Site Maven -->
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
			</plugin>
		</plugins>
	</reporting>

	<properties>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
</project>
